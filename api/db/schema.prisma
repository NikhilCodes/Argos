// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public", "auth"]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model UserExample {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?

  @@schema("public")
}

enum MonitorType {
  WEBSITE
  SHELL

  @@schema("public")
}

enum ActionType {
  CLICK
  TYPE
  WAIT

  @@schema("public")
}

model WebsiteStep {
  id         Int        @id @default(autoincrement())
  action     ActionType
  target     String
  value      String
  Monitors   Monitor?   @relation(fields: [monitorsId], references: [id])
  monitorsId Int?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@schema("public")
}

model Monitor {
  id          Int           @id @default(autoincrement())
  type        MonitorType
  url         String?
  commands    String?
  stdin       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  WebsiteStep WebsiteStep[]

  @@schema("public")
}
